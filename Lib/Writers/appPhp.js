import chalk from 'chalk';
import { writeFile } from '../utils.js';


export const saveDataForPhp = {
    save: async (destination, completeData) => {
        /** Configuration **/
        let phpData = saveDataForPhp.build('config', completeData.config);
        await writeFile(destination + 'config.php', phpData );

        /** Main Data **/
        for (const [key, data] of Object.entries(completeData.data)) {
            phpData = saveDataForPhp.build(key, data);
            await writeFile(destination + key + '.php', phpData );
            console.log(chalk.cyan('         - Main data for `php` app for `' + key + '` has been written'));

            /** Translations Data **/
            for (const [lang, dataTrans] of Object.entries(completeData.translations[key])) {
                phpData = saveDataForPhp.build(key, dataTrans);
                await writeFile(destination + completeData.TranslationDir + lang + '/' + key + '.php', phpData );
                console.log(
                    chalk.cyan(
                        '         - Translations language data `' + lang + '` for `php` app for `' + key +
                        '` has been written'
                    )
                );
            }
        }
        return;
    },



    build: (name, data) => {
        let buildData = `<?php
        
/**
 * This file has been automatically generated by the \`data-geoCodes\` application.
 * Any modifications you make will be overwritten during upgrades.
 * To avoid this, you can save the data directory in another location and launch the app specifying the new directory.
 * If you want to contribute to the development of the data, please follow these steps:
 * - Install Node.js on your system (you can use the instructions at https://nodejs.org/en/download/package-manager).
 * - Clone the repository from GitHub \`https://github.com/alibe1971/data-geoCodes\`.
 * - Modify the JSON files in the directory.
 * - Run the \`node build\` script from your terminal.
 * - The built files will be located inside the directory:
 *   - \`Data/built/php\`
 * - Submit a pull request to publish your changes.
 * - You can also clone the Php application, integrate the built data, and submit two separate pull requests:
 *   - One for the data modifications.
 *   - Another for integrating the modified data into the specific app.
 * For further detailed information, please refer to the documentation.
 */
 
 
`;

        buildData += 'return ' + JSON.stringify(data, null, 4)
            .replace(/\\"/g, "__ESCAPED_DOUBLE_QUOTE__")
            .replace(/'/g, "\\'")
            .replace(/:/g, ' =>')
            .replace(/\{/g, '[')
            .replace(/"/g, "'")
            .replace(/\}/g, ']')
            .replace(/__ESCAPED_DOUBLE_QUOTE__/g, '"') + ';';

        return buildData;
    }
};

