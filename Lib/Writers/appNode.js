import chalk from 'chalk';
import { writeFile } from '../utils.js';


export const saveDataForNode = {
    save: async (destination, completeData) => {
        /** Configuration **/
        let nodeData = saveDataForNode.build('config', completeData.config);
        await writeFile(destination + 'config.js', nodeData );

        /** Main Data **/
        for (const [key, data] of Object.entries(completeData.data)) {
            nodeData = saveDataForNode.build(key, data);
            await writeFile(destination + key + '.js', nodeData );
            console.log(chalk.cyan('         - Main data for `node` app for `' + key + '` has been written'));

            /** Translations Data **/
            for (const [lang, dataTrans] of Object.entries(completeData.translations[key])) {
                nodeData = saveDataForNode.build(key, dataTrans);
                await writeFile(destination + completeData.TranslationDir + lang + '/' + key + '.js', nodeData );
                console.log(
                    chalk.cyan(
                        '         - Translations language data `' + lang +'` for `node` app for `' + key +
                        '` has been written'
                    )
                );
            }
        }
        return;
    },



    build: (name, data) => {
        let buildData = `/**
 * This file has been automatically generated by the \`data-geoCodes\` application.
 * Any modifications you make will be overwritten during upgrades.
 * To avoid this, you can save the data directory in another location and launch the app specifying the new directory.
 * If you want to contribute to the development of the data, please follow these steps:
 * - Install Node.js on your system (you can use the instructions at https://nodejs.org/en/download/package-manager).
 * - Clone the repository from GitHub \`https://github.com/alibe1971/data-geoCodes\`.
 * - Modify the JSON files in the directory.
 * - Run the \`node build\` script from your terminal.
 * - The built files will be located inside the directory:
 *   - \`Data/built/node\`
 * - Submit a pull request to publish your changes.
 * - You can also clone the Node.js application, integrate the built data, and submit two separate pull requests:
 *   - One for the data modifications.
 *   - Another for integrating the modified data into the specific app.
 * For further detailed information, please refer to the documentation.
 */
 
 
 
 `;

        buildData += '\nexport const ' + name + ' = ' +
            JSON.stringify(data, null, 4).replace(/"([a-zA-Z0-9_]+)":/g, '$1:') + ';';

        return buildData;
    },
};

